import tkinter as tk
from tkinter import messagebox

binary = {
    "A": "01000001", "a": "01100001", "B": "01000010", "b": "01100010", "C": "01000011", "c": "01100011", 
    "D": "01000100", "d": "01100100", "E": "01000101", "e": "01100101", "F": "01000110", "f": "01100110", 
    "G": "01000111", "g": "01100111", "H": "01001000", "h": "01101000", "I": "01001001", "i": "01101001", 
    "J": "01001010", "j": "01101010", "K": "01001011", "k": "01101011", "L": "01001100", "l": "01101100", 
    "M": "01001101", "m": "01101101", "N": "01001110", "n": "01101110", "O": "01001111", "o": "01101111", 
    "P": "01010000", "p": "01110000", "Q": "01010001", "q": "01110001", "R": "01010010", "r": "01110010", 
    "S": "01010011", "s": "01110011", "T": "01010100", "t": "01110100", "U": "01010101", "u": "01110101", 
    "V": "01010110", "v": "01110110", "W": "01010111", "w": "01110111", "X": "01011000", "x": "01111000", 
    "Y": "01011001", "y": "01111001", "Z": "01011010", "z": "01111010", "0": "00110000", "1": "00110001", 
    "2": "00110010", "3": "00110011", "4": "00110100", "5": "00110101", "6": "00110110", "7": "00110111", 
    "8": "00111000", "9": "00111001", " ": "00100000", "!": "00100001", "\"": "00100010", "#": "00100011", 
    "$": "00100100", "%": "00100101", "&": "00100110", "'": "00100111", "(": "00101000", ")": "00101001", 
    "*": "00101010", "+": "00101011", ",": "00101100", "-": "00101101", ".": "00101110", "/": "00101111", 
    ":": "00111010", ";": "00111011", "<": "00111100", "=": "00111101", ">": "00111110", "?": "00111111", 
    "@": "01000000", "[": "01011011", "\\": "01011100", "]": "01011101", "^": "01011110", "_": "01011111", 
    "`": "01100000", "{": "01111011", "|": "01111100", "}": "01111101", "~": "01111110", "Å": "11000001", 
    "å": "11000001", "Ä": "11000010", "ä": "11000010", "Ö": "11000011", "ö": "11000011", "Æ": "11000100", 
    "æ": "11000100", "Ø": "11000101", "ø": "11000101", "Þ": "11000110", "þ": "11000110", "Ð": "11000111", 
    "ð": "11000111", "Ç": "11001000", "ç": "11001000", "Ñ": "11001001", "ñ": "11001001", "Š": "11001010", 
    "š": "11001010", "Ž": "11001011", "ž": "11001011", "Œ": "11001100", "œ": "11001100", "Ÿ": "11001101", 
    "ÿ": "11001101", "¡": "11001110", "¢": "11001111", "£": "11010000", "¤": "11010001", "¥": "11010010", 
    "¦": "11010011", "§": "11010100", "¨": "11010101", "©": "11010110", "ª": "11010111", "«": "11011000", 
    "¬": "11011001", "®": "11011010", "¯": "11011011", "°": "11011100", "±": "11011101", "²": "11011110", 
    "³": "11011111", "´": "11100000", "µ": "11100001", "¶": "11100010", "·": "11100011", "¸": "11100100",
    "¹": "11100101", "º": "11100110", "»": "11100111", "¼": "11101000", "½": "11101001", "¾": "11101010",
    "¿": "11101011", "×": "11101100", "÷": "11101101", "∅": "11101110", "∞": "11101111", "∆": "11110000",
    "∑": "11110001", "∏": "11110010", "∂": "11110011", "∫": "11110100", "√": "11110101", "∝": "11110110",
    "∧": "11110111", "∨": "11111000", "∩": "11111001", "∪": "11111010", "∈": "11111011", "∼": "11111100",
    "≡": "11111101", "≤": "11111110", "≥": "11111111"
}

morse = {
    "A": ".-", "a": ".-", "B": "-...", "b": "-...", "C": "-.-.", "c": "-.-.", "D": "-..", "d": "-..",
    "E": ".", "e": ".", "F": "..-.", "f": "..-.", "G": "--.", "g": "--.", "H": "....", "h": "....",
    "I": "..", "i": "..", "J": ".---", "j": ".---", "K": "-.-", "k": "-.-", "L": ".-..", "l": ".-..",
    "M": "--", "m": "--", "N": "-.", "n": "-.", "O": "---", "o": "---", "P": ".--.", "p": ".--.",
    "Q": "--.-", "q": "--.-", "R": ".-.", "r": ".-.", "S": "...", "s": "...", "T": "-", "t": "-",
    "U": "..-", "u": "..-", "V": "...-", "v": "...-", "W": ".--", "w": ".--", "X": "-..-", "x": "-..-",
    "Y": "-.--", "y": "-.--", "Z": "--..", "z": "--..", "0": "-----", "1": ".----", "2": "..---", "3": "...--",
    "4": "....-", "5": ".....", "6": "-....", "7": "--...", "8": "---..", "9": "----.", " ": " ", "!": "-.-.--",
    "\"": ".-..-.", "#": "...-..-", "$": "...-..-", "%": "..-.-.", "&": ".-...", "'": ".----.", "(": "-.--.",
    ")": "-.--.-", "*": "-..-", "+": ".-.-.", ",": "--..--", "-": "-....-", ".": ".-.-.-", "/": "-..-.",
    ":": "---...", ";": "-.-.-.", "<": "-...-", "=": "-...-", ">": "-...-", "?": "..--..", "@": ".--.-.",
    "[": "-.--.", "\\": "-....-", "]": "-.--.-", "^": "-...-", "_": "..--.-", "`": ".----.", "{": "-.--.-",
    "|": "-...-", "}": "-.--.-", "~": ".-.-.", "Å": ".--.-", "å": ".--.-", "Ä": ".-.-", "ä": ".-.-", "Ö": "---.",
    "ö": "---.", "Æ": ".-.-", "æ": ".-.-", "Ø": "---.", "ø": "---.", "Þ": ".--..", "þ": ".--..", "Ð": "..--.",
    "ð": "..--.", "Ç": "-.-..", "ç": "-.-..", "Ñ": "--.--", "ñ": "--.--", "Š": "----", "š": "----", "Ž": "--..-",
    "ž": "--..-", "Œ": "---.", "œ": "---.", "Ÿ": "--.--", "ÿ": "--.--", "¡": "--...-", "¢": "-.-..-", "£": ".-...",
    "¤": ".-...", "¥": "-.--.", "¦":
    "-.--.-", "§": ".-...", "¨": ".-..-", "©": ".--.-.", "ª": ".-..-", "«": ".-..-", "¬": "-..-.", "®": ".-.-.",
    "¯": "-....-", "°": ".----.", "±": "-...-", "²": "..---", "³": "...--", "´": ".----.", "µ": "..--.", "¶": ".--.-.",
    "·": "-.-.-.", "¸": "-.-.-.", "¹": ".----", "º": "-.-.", "»": "-.-..", "¼": "-..-.", "½": "..-..", "¾": "...-.",
    "¿": "..--.", "×": "-..-", "÷": "-...-", "∅": "---.", "∞": "..--..", "∆": ".----.", "∑": ".-...", "∏": "--.--",
    "∂": "-..-", "∫": "-.-.", "√": "-...", "∝": "-.--.", "∧": ".-.-.", "∨": ".--.", "∩": "-..-", "∪": "..-.",
}

def text_to_binary(text):
    binary_text = ""
    for char in text:
        binary_text += (binary.get(char, "???????") + " ")
    return binary_text

def binary_to_text(binary_text):
    text_ = ""
    for i in range(0, len(binary_text), 8):
        byte = binary_text[i:i+8]
        for char in binary:
            if binary[char] == byte:
                text_ += char
                break
        else:
            text_ += "?"
    return text_
def text_to_morse(text):
    morse_text = ""
    for char in text:
        morse_text += (morse.get(char, "???????") + " ")
    return morse_text
def morse_to_text(morse_text):
    text_ = ""
    for word in morse_text.split(" "):
        for char in morse:
            if morse[char] == word:
                text_ += char
                break
        else:
            text_ += "?"
    return text_
def convert():
    input_text = input_entry.get()
    conversion_type = conversion_var.get()
    if conversion_type == "text_to_binary":
        result = text_to_binary(input_text)
    elif conversion_type == "binary_to_text":
        result = binary_to_text(input_text)
    elif conversion_type == "text_to_morse":
        result = text_to_morse(input_text)
    elif conversion_type == "morse_to_text":
        result = morse_to_text(input_text)
    else:
        result = "Invalid conversion type selected."
    result_label.config(text=f"Result: {result}")

# Create the main window
root = tk.Tk()
root.title("Text-Binary Converter")

# Create and place the widgets
conversion_var = tk.StringVar(value="text_to_binary")

tk.Label(root, text="Enter text, binary or morse:").grid(row=0, column=0, padx=10, pady=10)
input_entry = tk.Entry(root, width=50)
input_entry.grid(row=0, column=1, padx=10, pady=10)

tk.Radiobutton(root, text="Text to Binary", variable=conversion_var, value="text_to_binary").grid(row=1, column=0, padx=10, pady=10)
tk.Radiobutton(root, text="Binary to Text", variable=conversion_var, value="binary_to_text").grid(row=1, column=1, padx=10, pady=10)
tk.Radiobutton(root, text="Text to Morse", variable=conversion_var, value="text_to_morse").grid(row=1, column=2, padx=10, pady=10)
tk.Radiobutton(root, text="Morse to Text", variable=conversion_var, value="morse_to_text").grid(row=1, column=3, padx=10, pady=10)

convert_button = tk.Button(root, text="Convert", command=convert)
convert_button.grid(row=2, column=0, columnspan=2, pady=10)

result_label = tk.Label(root, text="Result: ")
result_label.grid(row=3, column=0, columnspan=2, padx=10, pady=10)

# Run the application
root.mainloop()
